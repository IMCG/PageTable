/////////////////////
//////Structs////////
/////////////////////
struct frame{
	int idx;				//index into the mainMemory array
	int address;			//the frame address refers to the physical address
	int empty;				//is the frame empty?
};

struct PTE{
	int *frame;				//points to its associated frame
	int address;			//the virtual address that goes with this page
	int dirtyBit;			//is the frame dirty?
	int referenceBit;		//has the frame been referenced?
};

struct TLBEntry{
	int virtualAddress;		//used to find if the address from the line is in the TLB
	int physicalAddress;	//the translated virtual address
};

struct data{
	int processId;			//id for the current process
	int currentAddress;		//the address that belongs in that line
	int currentOperation;	//the operation to perform on the currentAddress
} line;

struct perforamance{
	double runningAverage;	//keep a running average of the total access time for each instruction
	int runNumber;			//the number of lines that you have read
} program;

struct processWorkingSets{
	int processesWS[5];
	int pageFault[5];
};

/////////////////////
///Data Structures///
/////////////////////

//used to keep track of which frames are in main memory
frame mainMemory[< ADDRESS_SPACE/FRAME_SIZE]

//used to keep track of which physical addresses have been used recently
TLBEntry TLB[CACHE_SIZE]